import { useEffect } from "react";
import { useSearchParams } from "react-router-dom";
import { useFiltersStore } from "@/stores/useFiltersStore";

export function useFilterSync() {
  const [searchParams, setSearchParams] = useSearchParams();
  const { setFromSearchParams, setHydrated } = useFiltersStore();

  // Initialize store from URL params on mount
  useEffect(() => {
    setFromSearchParams(searchParams);
    setHydrated(true);
  }, []); // Only run on mount

  // Subscribe to store changes and update URL
  useEffect(() => {
    const unsubscribe = useFiltersStore.subscribe(
      (state) => state,
      (state) => {
        const params = state.getSearchParamsObject();
        setSearchParams(params);
      },
      {
        // Only update URL when filter values change, not when actions change
        equalityFn: (a, b) => {
          const filterKeys: (keyof typeof a)[] = [
            "searchValue",
            "minYear",
            "maxYear",
            "minAge",
            "maxAge",
            "nationality",
            "club",
            "position",
            "competition",
            "minCarries",
            "maxCarries",
            "minPrgC",
            "maxPrgC",
            "minPrgDist",
            "maxPrgDist",
            "minPrgR",
            "maxPrgR",
            "minMis",
            "maxMis",
            "minDis",
            "maxDis",
            "minSucc",
            "maxSucc",
            "minSuccPct",
            "maxSuccPct",
            "minAtt3rd",
            "maxAtt3rd",
            "minAttPen",
            "maxAttPen",
            "minSh",
            "maxSh",
            "minSoT",
            "maxSoT",
            "minSoTPct",
            "maxSoTPct",
            "minSh90",
            "maxSh90",
            "minSoT90",
            "maxSoT90",
            "minGls",
            "maxGls",
            "minGlsMinusPK",
            "maxGlsMinusPK",
            "minGlsMinusxG",
            "maxGlsMinusxG",
            "minGlsPerSh",
            "maxGlsPerSh",
            "minGlsPerSoT",
            "maxGlsPerSoT",
            "minGplusA",
            "maxGplusA",
            "minGplusAminusPK",
            "maxGplusAminusPK",
            "minOG",
            "maxOG",
            "minxG",
            "maxxG",
            "minnpxG",
            "maxnpxG",
            "minAst",
            "maxAst",
            "minxA",
            "maxxA",
            "minxAG",
            "maxxAG",
            "minKP",
            "maxKP",
            "minSCA",
            "maxSCA",
            "minSCA90",
            "maxSCA90",
            "minGCA",
            "maxGCA",
            "minGCA90",
            "maxGCA90",
            "minCmp",
            "maxCmp",
            "minCmpPct",
            "maxCmpPct",
            "minAtt",
            "maxAtt",
            "minTB",
            "maxTB",
            "minPPA",
            "maxPPA",
            "minCrs",
            "maxCrs",
            "minCrsPA",
            "maxCrsPA",
            "minSw",
            "maxSw",
            "minTO",
            "maxTO",
            "minTkl",
            "maxTkl",
            "minTklW",
            "maxTklW",
            "minTklInt",
            "maxTklInt",
            "minTklPct",
            "maxTklPct",
            "minInt",
            "maxInt",
            "minBlocks",
            "maxBlocks",
            "minClr",
            "maxClr",
            "minErr",
            "maxErr",
            "minLost",
            "maxLost",
            "minWon",
            "maxWon",
            "minWonPct",
            "maxWonPct",
            "minFld",
            "maxFld",
            "minFls",
            "maxFls",
            "minCrdY",
            "maxCrdY",
            "minCrdR",
            "maxCrdR",
            "min2CrdY",
            "max2CrdY",
            "minPKwon",
            "maxPKwon",
            "minPKcon",
            "maxPKcon",
            "minCS",
            "maxCS",
            "minCSPct",
            "maxCSPct",
            "minSaves",
            "maxSaves",
            "minSavePct",
            "maxSavePct",
            "minGA",
            "maxGA",
            "minGA90",
            "maxGA90",
            "minSoTA",
            "maxSoTA",
            "minPSxG",
            "maxPSxG",
            "minPSxGPlusMinus",
            "maxPSxGPlusMinus",
            "minPKA",
            "maxPKA",
            "minPKsv",
            "maxPKsv",
            "minAvgDist",
            "maxAvgDist",
            "minAvgLen",
            "maxAvgLen",
            "minLaunchPct",
            "maxLaunchPct",
            "minMP",
            "maxMP",
            "minMin",
            "maxMin",
            "minMinPct",
            "maxMinPct",
            "minStarts",
            "maxStarts",
            "minIn",
            "maxIn",
            "minMnPerMP",
            "maxMnPerMP",
            "minMnPerStart",
            "maxMnPerStart",
            "minMnPerSub",
            "maxMnPerSub",
            "minUnSub",
            "maxUnSub",
            "minPPM",
            "maxPPM",
            "minRec",
            "maxRec",
            "minRecov",
            "maxRecov",
            "minTouches",
            "maxTouches",
            "minFK",
            "maxFK",
            "minCK",
            "maxCK",
            "minTI",
            "maxTI",
            "minLive",
            "maxLive",
            "minDead",
            "maxDead",
          ];
          return filterKeys.every((key) => a[key] === b[key]);
        },
      }
    );

    return unsubscribe;
  }, [setSearchParams]);

  return { searchParams };
}
